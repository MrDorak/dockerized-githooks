#!/bin/bash

modified_files=$(git diff --name-only ORIG_HEAD HEAD)
docker_id=$(docker-compose ps -q php) # Replace php by docker's service name
branch=$(git rev-parse --abbrev-ref HEAD)

function has_changed() {
    echo "Checking if $1 has changed"
    echo ${modified_files} | grep -q $1 && eval "$2"
}

if grep -oq 'on_hotfix.*true' hooks/conf.txt ; then
# If "on_hotfix[...]true" exists in conf file, skip hooks as we're merging an hotfix unless on develop
    if [[ ${branch} = "develop" ]] ; then
        echo "Hotfix is finished, editing configuration file"
        sed -i 's/^on_hotfix.*/on_hotfix : false/' hooks/conf.txt
    else
        echo "Merging an hotfix, skipping hooks"
        exit 0
    fi
fi

if [[ ${docker_id} = "" || $(docker inspect -f '{{.State.Running}}' "${docker_id}") = false ]]; then
    echo "${docker_id} is not running, skipping hook"
    exit 0
fi

# If "webpack_config[...]" exists in conf file, this means we already have a configuration
if grep -oq 'webpack_config.*' hooks/conf.txt
then
    conf=$(grep -o 'webpack_config.*' hooks/conf.txt)
    config=$(echo ${conf} | sed 's/.*:\s*//')
else
    if [[ -t 1 ]]; then
        exec < /dev/tty
        # Edit with your configuration, here we have 2 scripts ; 'dev' and 'watch'
        read -p "Do you want webpack to run in watch mode by default ? Yes (y) / No (n)
" config || exit 1
        if [[ "$config" == "y" || "$config" == "Y" || $config == [yY][eE][sS] ]]; then
            config="watch"
        else
            config="dev"
        fi
    else
        echo "Output device is not a terminal, using webpack script configuration 'dev' by default"
        config="dev"
    fi
    echo "webpack_config : ${config}" >> hooks/conf.txt
fi

if has_changed package.json ; then
    if [[ ${branch} == "master" || ${branch} == "develop" ]]; then
        echo "Changes found, running yarn install" && docker exec -t "${docker_id}" yarn install
    else
        echo "Changes found, you should run yarn install to make sure you have the latest package.json dependencies"
    fi
else
    echo "No change found"
fi

# Replace 'templates/' by the path to your javascript and sass files
if has_changed templates/ ; then
    if [[ ${branch} == "master" || ${branch} == "develop" ]]; then
        echo "Changes found, running yarn ${config}" && docker exec -d "${docker_id}" yarn "${config}"
    else
        echo "Changes found, you should run yarn ${config} to make sure you have the latest version of js/css"
    fi
else
    echo "No change found"
    if [[ "$config" == "watch" ]]; then
        echo "Starting detached watch mode"
        docker exec -d "${docker_id}" yarn "${config}"
    fi
fi

echo 'Successfully merged'
